#!/usr/bin/env ruby
module RanchHandCLI
  require 'gli'
  require 'ranch_hand'
  require 'pry'

  include GLI::App
  # our cli is wrapped in a module (to not pollute the global namespace with GLI methods),
  # so we need to extend here for things to work
  extend self

  program_desc 'Command line tools for using Rancher in a Kubernetes development environment'

  version RanchHand::VERSION

  subcommand_option_handling :normal
  arguments :loose

  desc 'Sets up ranch hand'
  command :setup do |c|
    c.action do |global_options, options, args|
      RanchHand::Base.setup
    end
  end

  desc 'Installs ranch hand Oh My Zsh shortcuts'
  command :ohmyzsh do |c|
    c.action do |global_options, options, args|
      RanchHand::Base.install_ohmyzsh
    end
  end

  desc 'Initializes ranch hand for current project'
  command :init do |c|
    c.action do |global_options, command_options, args|
      RanchHand::Base.init
    end
  end

  desc 'Updates ranch hand config for current project'
  command :update_config do |c|
    c.action do |global_options, command_options, args|
      RanchHand::Base.update_config
    end
  end

  desc 'Execs into a running container'
  command :exec do |c|
    config = RanchHand::Config.load

    c.switch [:g, :group], negatable: true, default_value: config[:group] || false, desc: "Group pods returned so that there is only one from each deployment, --no-group can be used to override project config as needed."
    c.switch [:rm, :remove], negatable: false, desc: "Used to indicated that you want to remove a previously saved command."
    c.switch [:r, :repeat], negatable: false, desc: "Repeat the last command ran (against the same pod)."
    c.switch [:sp, :skip_prefix], negatable: false, default_value: false, desc: "Do not add configured command prefix."

    c.flag [:c, :command], desc: "Command to run once (not permanently stored)"
    c.flag [:f, :filter], desc: "Filter pods returned to those that contain the string provided (negative matches supported). Examples: '-f nginx', '-f -apache'"
    c.flag [:n, :namespace], required: true, default_value: config[:namespace], desc: "Namespace against which to retreive pods and run command"
    c.flag [:p, :pod], default_value: config[:pod], desc: "Run command in a specific pod. If used with -g only the pod name can be specified and the command will be run against the first in the group"

    default_command_options = {
      command_prefix: config[:command_prefix],
      prefer_ui: config[:prefer_ui]
    }

    c.action do |global_options, command_options, args|
      RanchHand::KubeCtl.new.exec(args: args, cmd_options: default_command_options.merge(command_options))
    end
  end

  pre do |global, command, options, args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global, command, options, args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end

  exit run(ARGV)
end
