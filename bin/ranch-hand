#!/usr/bin/env ruby
module RanchHandCLI
  require 'gli'
  require 'ranch_hand'
  require 'pry'

  include GLI::App
  # our cli is wrapped in a module (to not pollute the global namespace with GLI methods),
  # so we need to extend here for things to work
  extend self

  program_desc 'Command line tools for using Rancher in a Kubernetes development environment'

  version RanchHand::VERSION

  subcommand_option_handling :normal
  arguments :strict

  desc 'Sets up ranch hand'
  command :setup do |c|
    c.action do |global_options, options, args|
      RanchHand::Base.setup
    end
  end

  desc 'Execs into a running container'
  arg 'namespace'
  command :exec do |c|
    c.switch [:g, :group], negatable: false, desc: "Group pods returned so that there is only one from each deployment."
    c.switch [:rm, :remove], negatable: false, desc: "Used to indicated that you want to remove a previously saved command."
    c.switch [:r, :repeat], negatable: false, desc: "Repeat the last command ran (against the same pod)."
    
    c.flag [:c, :command], desc: "Command to run once (not permanently stored)"
    c.flag [:f, :filter], desc: "Filter pods returned to those that contain the string provided (negative matches supported). Examples: '-f nginx', '-f -apache'"
    c.flag [:p, :pod], desc: "Run command in a specific pod. If used with -g only the pod name can be specified and the command will be run against the first in the group"

    c.action do |global_options, options, args|
      RanchHand::KubeCtl.new.exec(args[0], options)
    end
  end

  pre do |global, command, options, args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global, command, options, args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end

  exit run(ARGV)
end
